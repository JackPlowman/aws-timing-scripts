name: "Run Code Checks"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  packages: read

env:
  FORCE_COLOR: 1

jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Lint Code Base
        uses: super-linter/super-linter@5119dcd8011e92182ce8219d9e9efc82f16fddb6 # v8.0.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/super-linter-configurations
          YAML_ERROR_ON_WARNING: true
          VALIDATE_EDITORCONFIG: false
          VALIDATE_GIT_COMMITLINT: false
          VALIDATE_NATURAL_LANGUAGE: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON_RUFF: false

  common-code-checks:
    name: Common Code Checks
    permissions:
      contents: read
      actions: read
      pull-requests: write
      security-events: write
    uses: JackPlowman/reusable-workflows/.github/workflows/common-code-checks.yml@213eae09e5b24b7be8a5ca596be7ea34a7c0989d # v2025.08.11.03
    secrets:
      workflow_github_token: ${{ secrets.GITHUB_TOKEN }}

  codeql-checks:
    name: CodeQL Analysis
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        language: [actions, python]
    uses: JackPlowman/reusable-workflows/.github/workflows/codeql-analysis.yml@213eae09e5b24b7be8a5ca596be7ea34a7c0989d # v2025.08.11.03
    with:
      language: ${{ matrix.language }}

  run-python-lint-checks:
    name: Run Python Lint Checks
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up UV
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      - name: Install Ruff
        run: uv tool install ruff
      - name: Generate Ruff Sarif
        run: uv run ruff check .
        env:
          RUFF_OUTPUT_FORMAT: "sarif"
          RUFF_OUTPUT_FILE: "ruff-results.sarif"
        continue-on-error: true
      - name: Upload Ruff analysis results to GitHub
        uses: github/codeql-action/upload-sarif@76621b61decf072c1cee8dd1ce2d2a82d33c17ed # v3.29.8
        with:
          sarif_file: ruff-results.sarif
          wait-for-processing: true
      - name: Check Python Code Linting (Ruff)
        run: uv run ruff check .
        env:
          RUFF_OUTPUT_FORMAT: "github"

  run-python-format-checks:
    name: Run Python Format Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up UV
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      - name: Install Ruff
        run: uv tool install ruff
      - name: Check Python Code Format (Ruff)
        run: uv run ruff format --check .
        env:
          RUFF_OUTPUT_FORMAT: "github"

  run-python-type-checks:
    name: Run Python Type Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up UV
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          activate-environment: true
      - name: Install Ty
        run: uv tool install ty
      - name: Sync Environment (time_lambda_durations.py)
        run: uv sync --script time_lambda_durations.py --active
      - name: Sync Environment (time_sfn_durations.py)
        run: uv sync --script time_sfn_durations.py --active
      - name: Check Python Code Types (ty) Checks
        run: uv tool run ty check .

  run-python-dead-code-checks:
    name: Run Python Dead Code Checks
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up UV
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      - name: Install Vulture
        run: uv tool install vulture
      - name: Check Python Code for Dead Code (Vulture)
        run: uv run vulture .
